[{"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\index.js":"1","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\App.js":"2","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Header\\Header.js":"3","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\context\\GlobalState.js":"4","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductGrid.js":"5","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductItem.js":"6","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\store.js":"7","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Store.js":"8","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Footer\\Footer.js":"9","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\About.js":"10","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Cart.js":"11","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Wishlist.js":"12","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductDetail.js":"13","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\CartItem\\CartItem.js":"14","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\FavoriteItem\\FavoriteItem.js":"15"},{"size":331,"mtime":1609137402877,"results":"16","hashOfConfig":"17"},{"size":937,"mtime":1609142072975,"results":"18","hashOfConfig":"17"},{"size":1231,"mtime":1610008279855,"results":"19","hashOfConfig":"17"},{"size":3961,"mtime":1610012286008,"results":"20","hashOfConfig":"17"},{"size":487,"mtime":1609047946261,"results":"21","hashOfConfig":"17"},{"size":2094,"mtime":1609917120798,"results":"22","hashOfConfig":"17"},{"size":212,"mtime":1609051785886,"results":"23","hashOfConfig":"17"},{"size":212,"mtime":1609051785886,"results":"24","hashOfConfig":"17"},{"size":262,"mtime":1609745233799,"results":"25","hashOfConfig":"17"},{"size":374,"mtime":1610268853900,"results":"26","hashOfConfig":"17"},{"size":1376,"mtime":1610015077967,"results":"27","hashOfConfig":"17"},{"size":512,"mtime":1610266529443,"results":"28","hashOfConfig":"17"},{"size":1600,"mtime":1609924239381,"results":"29","hashOfConfig":"17"},{"size":1631,"mtime":1610007395493,"results":"30","hashOfConfig":"17"},{"size":1209,"mtime":1610268379618,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1s3lmi3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\index.js",[],["64","65"],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\App.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Header\\Header.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\context\\GlobalState.js",["66"],"import React, {useState, useEffect} from \"react\"\r\nimport Swal from 'sweetalert2'\r\n\r\n// creating `context`\r\nconst StateContext = React.createContext()\r\n\r\nfunction StateProvider({children}){\r\n    // defining `state` for our product data\r\n    const [products, setProducts] = useState([])\r\n    // defining `state` for our cart data\r\n    const [cartItems, setCartItems] = useState([])\r\n    // defining `state` for calculating total amount\r\n    const [total, setTotal] = useState(0);\r\n    // defining `state` for counting total items in\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    // defining `state` for favorite product data\r\n    const [favoriteItems, setFavoriteItems] = useState([])\r\n\r\n    // fetching product data\r\n    const url = \"https://raw.githubusercontent.com/mahmud-sajib/ecommerce-store-product-data/master/data.json\"\r\n    \r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json()) // get json data from api\r\n        .then(data => setProducts(data)) // save data to `state` \r\n    }, [])\r\n\r\n    // calculate cart quantity\r\n    function calcQuantity() {\r\n        const totalQty = cartItems.reduce((total, product) => total + product.quantity, 0)\r\n        setTotalItems(totalQty)\r\n    }\r\n\r\n    // addToCart button functionality\r\n    function addToCart(product){\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === product.id);\r\n        // if index not found push it to cart & set quantity to 1 else update the quantity only\r\n        if(index === -1){\r\n            cartItems.push({...product, quantity:1})   \r\n        } else {\r\n            cartItems[index].quantity += 1 \r\n        }\r\n        // update cart quantity\r\n        calcQuantity()  \r\n    }\r\n\r\n    // removeFromCart button functionality\r\n    function removeFromCart(product){\r\n        // remove product from cart\r\n        cartItems.pop(product)\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // counter increase button functionality\r\n    function increaseCount(id) {\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === id);\r\n        // increase the quantity by 1 \r\n        cartItems[index].quantity += 1\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // counter decrease button functionality\r\n    function decreaseCount(id) {\r\n        // check if the newly added product is already in cart by getting it's index\r\n        const index = cartItems.findIndex(item => item.id === id);\r\n        // decrease the quantity by 1\r\n        cartItems[index].quantity -= 1\r\n        // update cart quantity\r\n        calcQuantity()\r\n    }\r\n\r\n    // addToFavorite button functionality\r\n    function addToFavorite(newItem){\r\n        setFavoriteItems(prevItems => [...prevItems, newItem])\r\n    }\r\n\r\n    // removeFromFavorite button functionality\r\n    function removeFromFavorite(id){\r\n        setFavoriteItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n\r\n    function resetCart() {\r\n        setCartItems([])\r\n        setTotalItems(0)\r\n    }\r\n\r\n    function checkOutCart() {\r\n        resetCart()\r\n        Swal.fire(\r\n            'Congrats!',\r\n            'You successfully placed an order!',\r\n            'success'\r\n        )\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        // calculate total bill\r\n        const totalPrices = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n        setTotal(totalPrices);\r\n    }, [totalItems])\r\n    \r\n    return(\r\n        <StateContext.Provider value={{products, total, totalItems, cartItems, addToCart, removeFromCart, favoriteItems, addToFavorite, removeFromFavorite, increaseCount, decreaseCount, resetCart, checkOutCart}}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n\r\nexport {StateContext, StateProvider}","C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductGrid.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductItem.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\store.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Store.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\About.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Cart.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\pages\\Wishlist.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\Product\\ProductDetail.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\CartItem\\CartItem.js",[],"C:\\Users\\Mahmud\\Desktop\\ReactProjects\\ecommerce-store\\src\\components\\FavoriteItem\\FavoriteItem.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":105,"column":8,"nodeType":"73","endLine":105,"endColumn":20,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [cartItems, totalItems]",{"range":"80","text":"81"},[3607,3619],"[cartItems, totalItems]"]